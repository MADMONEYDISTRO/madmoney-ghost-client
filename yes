local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local StatsService = game:GetService("Stats")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local THEMES = {
    ["Default"] = {
        THEME_COLOR = Color3.fromRGB(79, 209, 197),
        BACKGROUND_COLOR = Color3.fromRGB(26, 26, 46),
        SECONDARY_COLOR = Color3.fromRGB(22, 33, 62),
        TEXT_COLOR = Color3.fromRGB(255, 255, 255),
        ACCENT_COLOR = Color3.fromRGB(107, 114, 128)
    },
    ["Crimson Fire"] = {
        THEME_COLOR = Color3.fromRGB(220, 53, 69),
        BACKGROUND_COLOR = Color3.fromRGB(40, 17, 17),
        SECONDARY_COLOR = Color3.fromRGB(82, 23, 23),
        TEXT_COLOR = Color3.fromRGB(255, 255, 255),
        ACCENT_COLOR = Color3.fromRGB(200, 35, 51)
    },
    ["Ocean Depths"] = {
        THEME_COLOR = Color3.fromRGB(32, 201, 151),
        BACKGROUND_COLOR = Color3.fromRGB(8, 28, 36),
        SECONDARY_COLOR = Color3.fromRGB(16, 42, 67),
        TEXT_COLOR = Color3.fromRGB(255, 255, 255),
        ACCENT_COLOR = Color3.fromRGB(0, 180, 216)
    },
    ["Forest Mystique"] = {
        THEME_COLOR = Color3.fromRGB(46, 204, 113),
        BACKGROUND_COLOR = Color3.fromRGB(11, 36, 22),
        SECONDARY_COLOR = Color3.fromRGB(22, 51, 35),
        TEXT_COLOR = Color3.fromRGB(255, 255, 255),
        ACCENT_COLOR = Color3.fromRGB(39, 174, 96)
    },
    ["Golden Sunset"] = {
        THEME_COLOR = Color3.fromRGB(241, 196, 15),
        BACKGROUND_COLOR = Color3.fromRGB(56, 42, 11),
        SECONDARY_COLOR = Color3.fromRGB(109, 76, 65),
        TEXT_COLOR = Color3.fromRGB(255, 255, 255),
        ACCENT_COLOR = Color3.fromRGB(230, 126, 34)
    },
    ["Purple Haze"] = {
        THEME_COLOR = Color3.fromRGB(155, 89, 182),
        BACKGROUND_COLOR = Color3.fromRGB(41, 22, 56),
        SECONDARY_COLOR = Color3.fromRGB(52, 34, 73),
        TEXT_COLOR = Color3.fromRGB(255, 255, 255),
        ACCENT_COLOR = Color3.fromRGB(142, 68, 173)
    },
    ["Neon Cyber"] = {
        THEME_COLOR = Color3.fromRGB(0, 255, 255),
        BACKGROUND_COLOR = Color3.fromRGB(10, 10, 40),
        SECONDARY_COLOR = Color3.fromRGB(20, 20, 60),
        TEXT_COLOR = Color3.fromRGB(255, 255, 255),
        ACCENT_COLOR = Color3.fromRGB(255, 0, 255)
    },
    ["Arctic Frost"] = {
        THEME_COLOR = Color3.fromRGB(52, 152, 219),
        BACKGROUND_COLOR = Color3.fromRGB(13, 32, 56),
        SECONDARY_COLOR = Color3.fromRGB(23, 42, 66),
        TEXT_COLOR = Color3.fromRGB(255, 255, 255),
        ACCENT_COLOR = Color3.fromRGB(93, 173, 226)
    },
    ["Volcanic Ember"] = {
        THEME_COLOR = Color3.fromRGB(231, 76, 60),
        BACKGROUND_COLOR = Color3.fromRGB(56, 24, 24),
        SECONDARY_COLOR = Color3.fromRGB(82, 34, 34),
        TEXT_COLOR = Color3.fromRGB(255, 255, 255),
        ACCENT_COLOR = Color3.fromRGB(236, 112, 99)
    },
    ["Midnight Steel"] = {
        THEME_COLOR = Color3.fromRGB(149, 165, 166),
        BACKGROUND_COLOR = Color3.fromRGB(34, 34, 44),
        SECONDARY_COLOR = Color3.fromRGB(44, 44, 54),
        TEXT_COLOR = Color3.fromRGB(255, 255, 255),
        ACCENT_COLOR = Color3.fromRGB(189, 195, 199)
    },
    ["Toxic Waste"] = {
        THEME_COLOR = Color3.fromRGB(46, 204, 113),
        BACKGROUND_COLOR = Color3.fromRGB(17, 36, 17),
        SECONDARY_COLOR = Color3.fromRGB(26, 56, 26),
        TEXT_COLOR = Color3.fromRGB(255, 255, 255),
        ACCENT_COLOR = Color3.fromRGB(0, 255, 127)
    },
    ["Rose Gold"] = {
        THEME_COLOR = Color3.fromRGB(255, 163, 197),
        BACKGROUND_COLOR = Color3.fromRGB(56, 34, 45),
        SECONDARY_COLOR = Color3.fromRGB(76, 54, 65),
        TEXT_COLOR = Color3.fromRGB(255, 255, 255),
        ACCENT_COLOR = Color3.fromRGB(255, 204, 221)
    },
    ["Electric Blue"] = {
        THEME_COLOR = Color3.fromRGB(0, 150, 255),
        BACKGROUND_COLOR = Color3.fromRGB(10, 25, 56),
        SECONDARY_COLOR = Color3.fromRGB(20, 35, 76),
        TEXT_COLOR = Color3.fromRGB(255, 255, 255),
        ACCENT_COLOR = Color3.fromRGB(100, 200, 255)
    },
    ["Sunset Orange"] = {
        THEME_COLOR = Color3.fromRGB(255, 107, 53),
        BACKGROUND_COLOR = Color3.fromRGB(56, 34, 22),
        SECONDARY_COLOR = Color3.fromRGB(76, 54, 42),
        TEXT_COLOR = Color3.fromRGB(255, 255, 255),
        ACCENT_COLOR = Color3.fromRGB(255, 157, 113)
    },
    ["Deep Space"] = {
        THEME_COLOR = Color3.fromRGB(138, 43, 226),
        BACKGROUND_COLOR = Color3.fromRGB(10, 5, 30),
        SECONDARY_COLOR = Color3.fromRGB(20, 15, 50),
        TEXT_COLOR = Color3.fromRGB(255, 255, 255),
        ACCENT_COLOR = Color3.fromRGB(75, 0, 130)
    },
    ["Cherry Blossom"] = {
        THEME_COLOR = Color3.fromRGB(255, 182, 193),
        BACKGROUND_COLOR = Color3.fromRGB(56, 34, 45),
        SECONDARY_COLOR = Color3.fromRGB(76, 54, 65),
        TEXT_COLOR = Color3.fromRGB(255, 255, 255),
        ACCENT_COLOR = Color3.fromRGB(255, 209, 220)
    },
    ["Matrix Green"] = {
        THEME_COLOR = Color3.fromRGB(0, 255, 0),
        BACKGROUND_COLOR = Color3.fromRGB(0, 20, 10),
        SECONDARY_COLOR = Color3.fromRGB(0, 40, 20),
        TEXT_COLOR = Color3.fromRGB(255, 255, 255),
        ACCENT_COLOR = Color3.fromRGB(0, 180, 0)
    },
    ["Royal Purple"] = {
        THEME_COLOR = Color3.fromRGB(106, 13, 173),
        BACKGROUND_COLOR = Color3.fromRGB(22, 5, 56),
        SECONDARY_COLOR = Color3.fromRGB(42, 15, 76),
        TEXT_COLOR = Color3.fromRGB(255, 255, 255),
        ACCENT_COLOR = Color3.fromRGB(126, 33, 193)
    },
    ["Amber Glow"] = {
        THEME_COLOR = Color3.fromRGB(255, 191, 0),
        BACKGROUND_COLOR = Color3.fromRGB(56, 42, 11),
        SECONDARY_COLOR = Color3.fromRGB(76, 62, 31),
        TEXT_COLOR = Color3.fromRGB(255, 255, 255),
        ACCENT_COLOR = Color3.fromRGB(255, 221, 100)
    },
    ["Blood Moon"] = {
        THEME_COLOR = Color3.fromRGB(220, 20, 60),
        BACKGROUND_COLOR = Color3.fromRGB(40, 10, 15),
        SECONDARY_COLOR = Color3.fromRGB(60, 20, 25),
        TEXT_COLOR = Color3.fromRGB(255, 255, 255),
        ACCENT_COLOR = Color3.fromRGB(178, 34, 34)
    }
}

-- Configuration
local CONFIG = THEMES["Default"]
local currentTheme = "Default"

-- Feature states
local FEATURES = {
    combat = {
        killAll = false,
        autoAim = false,
        reach = false
    },
    visual = {
        esp = false,
        chatspam = false,
        chams = false
    },
    settings = {
        espColor = "Red",
        uiTheme = "Default"
    }
}

-- Table to store loadstring functions for each feature
-- REMEMBER: USING LOADSTRING IS DANGEROUS IF THE STRING IS NOT TRUSTED
local FEATURE_FUNCTIONS = {
    combat = {
        killAll = function(enabled)
            if enabled then
                print("Executing Kill All script via loadstring...")
                loadstring(game:HttpGet("https://raw.githubusercontent.com/MADMONEYDISTRO/madmoney-ghost-client/refs/heads/main/good%20kill%20all%20fr"))()  
            else
                print("Kill All disabled")
            end
        end,
        autoAim = function(enabled)
            if enabled then
                print("Executing Auto Aim script via loadstring...")
                -- [Auto Aim script remains unchanged] --
            else
                print("Auto Aim disabled")
            end
        end,
        reach = function(enabled)
            if enabled then
                print("Executing Reach script via loadstring...")
            else
                print("Reach disabled")
            end
        end,
    },
    visual = {
        esp = function(enabled)
            if enabled then
                print("Executing ESP script via loadstring...")
                -- [ESP script remains unchanged] --
            else
                print("ESP disabled")
            end
        end,
        chatspam = function(enabled)
            if enabled then
                print("Executing Tracers script via loadstring...")
                loadstring(game:HttpGet("https://raw.githubusercontent.com/MADMONEYDISTRO/madmoney-ghost-client/refs/heads/main/lsdtrip"))()
            else
                print("Tracers disabled")
            end
        end,
        chams = function(enabled)
            if enabled then
                print("Executing Chams script via loadstring...")
            else
                print("Chams disabled")
            end
        end,
    },
}

-- Function to apply theme
local function applyTheme(themeName, gui)
    if not THEMES[themeName] or not gui then return end
    
    CONFIG = THEMES[themeName]
    currentTheme = themeName
    
    -- Update main frame
    local mainFrame = gui:FindFirstChild("MainFrame")
    if mainFrame then
        mainFrame.BackgroundColor3 = CONFIG.BACKGROUND_COLOR
        
        -- Update title bar
        local titleBar = mainFrame:FindFirstChild("TitleBar")
        if titleBar then
            titleBar.BackgroundColor3 = CONFIG.SECONDARY_COLOR
            local titleText = titleBar:FindFirstChild("TitleText")
            if titleText then
                titleText.TextColor3 = CONFIG.THEME_COLOR
            end
        end
        
        -- Update shadow
        local shadow = mainFrame:FindFirstChild("Shadow")
        if shadow then
            shadow.ImageColor3 = CONFIG.THEME_COLOR
        end
        
        -- Update content sections
        local contentFrame = mainFrame:FindFirstChild("ContentFrame")
        if contentFrame then
            -- Update section titles
            for _, section in pairs(contentFrame:GetChildren()) do
                if section:IsA("Frame") and section.Name:find("Section") then
                    local sectionTitle = section:FindFirstChild("SectionTitle")
                    if sectionTitle then
                        sectionTitle.TextColor3 = CONFIG.THEME_COLOR
                    end
                    
                    -- Update toggle switches
                    for _, toggle in pairs(section:GetChildren()) do
                        if toggle.Name:find("Toggle") then
                            local label = toggle:FindFirstChild("Label")
                            if label then
                                label.TextColor3 = CONFIG.TEXT_COLOR
                            end
                        end
                    end
                end
            end
            
            -- Update info frame
            local infoFrame = contentFrame:FindFirstChild("Frame")
            if infoFrame then
                infoFrame.BackgroundColor3 = CONFIG.SECONDARY_COLOR
                local versionLabel = infoFrame:FindFirstChild("VersionLabel")
                if versionLabel then
                    versionLabel.TextColor3 = CONFIG.ACCENT_COLOR
                end
                
                local statusLabel = infoFrame:FindFirstChild("StatusLabel")
                if statusLabel then
                    statusLabel.TextColor3 = CONFIG.THEME_COLOR
                end
                
                local performanceLabel = infoFrame:FindFirstChild("PerformanceLabel")
                if performanceLabel then
                    performanceLabel.TextColor3 = CONFIG.ACCENT_COLOR
                end
                
                -- Update Server Hop button
                local serverHopButton = infoFrame:FindFirstChild("ServerHopButton")
                if serverHopButton then
                    serverHopButton.BackgroundColor3 = CONFIG.THEME_COLOR
                    serverHopButton.TextColor3 = CONFIG.TEXT_COLOR
                end
            end
        end
    end
    
    print("Theme changed to: " .. themeName)
end

-- Create main GUI
local function createMainGui()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "TrapwareUI"
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    screenGui.Parent = playerGui
    
    -- Main frame - Made smaller
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 650, 0, 480) -- Reduced from 800x600
    mainFrame.Position = UDim2.new(0.5, -325, 0.5, -240)
    mainFrame.BackgroundColor3 = CONFIG.BACKGROUND_COLOR
    mainFrame.BorderSizePixel = 0
    mainFrame.Active = true
    mainFrame.Draggable = true
    mainFrame.Parent = screenGui
    
    -- Add corner radius
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = mainFrame
    
    -- Add glow effect
    local shadow = Instance.new("ImageLabel")
    shadow.Name = "Shadow"
    shadow.Size = UDim2.new(1, 20, 1, 20)
    shadow.Position = UDim2.new(0, -10, 0, -10)
    shadow.BackgroundTransparency = 1
    shadow.Image = "rbxasset://textures/ui/Controls/DropShadow.png"
    shadow.ImageColor3 = CONFIG.THEME_COLOR
    shadow.ImageTransparency = 0.5
    shadow.ScaleType = Enum.ScaleType.Slice
    shadow.SliceCenter = Rect.new(12, 12, 276, 276)
    shadow.ZIndex = -1
    shadow.Parent = mainFrame
    
    return screenGui, mainFrame
end

-- Create title bar
local function createTitleBar(parent)
    local titleBar = Instance.new("Frame")
    titleBar.Name = "TitleBar"
    titleBar.Size = UDim2.new(1, 0, 0, 50) -- Reduced height
    titleBar.Position = UDim2.new(0, 0, 0, 0)
    titleBar.BackgroundColor3 = CONFIG.SECONDARY_COLOR
    titleBar.BorderSizePixel = 0
    titleBar.Parent = parent
    
    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = UDim.new(0, 12)
    titleCorner.Parent = titleBar
    
    -- Title text
    local titleText = Instance.new("TextLabel")
    titleText.Name = "TitleText"
    titleText.Size = UDim2.new(0, 200, 1, 0)
    titleText.Position = UDim2.new(0, 15, 0, 0)
    titleText.BackgroundTransparency = 1
    titleText.Text = "Trapware v1.2.5"
    titleText.TextColor3 = CONFIG.THEME_COLOR
    titleText.TextSize = 20 -- Reduced from 24
    titleText.TextXAlignment = Enum.TextXAlignment.Left
    titleText.Font = Enum.Font.GothamBold
    titleText.Parent = titleBar
    
    -- Close button
    local closeButton = Instance.new("TextButton")
    closeButton.Name = "CloseButton"
    closeButton.Size = UDim2.new(0, 35, 0, 35) -- Reduced size
    closeButton.Position = UDim2.new(1, -45, 0.5, -17.5)
    closeButton.BackgroundColor3 = Color3.fromRGB(239, 68, 68)
    closeButton.BorderSizePixel = 0
    closeButton.Text = "×"
    closeButton.TextColor3 = CONFIG.TEXT_COLOR
    closeButton.TextSize = 18
    closeButton.Font = Enum.Font.GothamBold
    closeButton.Parent = titleBar
    
    local closeCorner = Instance.new("UICorner")
    closeCorner.CornerRadius = UDim.new(1, 0) -- This makes it a circle if the frame is square
    closeCorner.Parent = closeButton
    
    return titleBar, closeButton
end

-- Create toggle switch - Fixed alignment
local function createToggleSwitch(parent, name, position, enabled)
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Name = name .. "Toggle"
    toggleFrame.Size = UDim2.new(1, -20, 0, 35) -- Adjusted size
    toggleFrame.Position = position
    toggleFrame.BackgroundTransparency = 1
    toggleFrame.Parent = parent
    
    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Size = UDim2.new(1, -80, 1, 0) -- Properly sized to leave room for switch
    label.Position = UDim2.new(0, 10, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = name
    label.TextColor3 = CONFIG.TEXT_COLOR
    label.TextSize = 14 -- Reduced from 16
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Font = Enum.Font.Gotham
    label.Parent = toggleFrame
    
    local switchBg = Instance.new("Frame")
    switchBg.Name = "SwitchBackground"
    switchBg.Size = UDim2.new(0, 50, 0, 25) -- Reduced size
    switchBg.Position = UDim2.new(1, -60, 0.5, -12.5) -- Properly positioned
    switchBg.BackgroundColor3 = enabled and CONFIG.THEME_COLOR or Color3.fromRGB(75, 85, 99)
    switchBg.BorderSizePixel = 0
    switchBg.Parent = toggleFrame
    
    local switchCorner = Instance.new("UICorner")
    switchCorner.CornerRadius = UDim.new(1, 0) -- Makes it a rounded pill shape
    switchCorner.Parent = switchBg
    
    local switchKnob = Instance.new("Frame")
    switchKnob.Name = "SwitchKnob"
    switchKnob.Size = UDim2.new(0, 21, 0, 21) -- Reduced size
    switchKnob.Position = enabled and UDim2.new(1, -23, 0.5, -10.5) or UDim2.new(0, 2, 0.5, -10.5)
    switchKnob.BackgroundColor3 = CONFIG.TEXT_COLOR
    switchKnob.BorderSizePixel = 0
    switchKnob.Parent = switchBg
    
    local knobCorner = Instance.new("UICorner")
    knobCorner.CornerRadius = UDim.new(1, 0) -- Makes it a circle
    knobCorner.Parent = switchKnob
    
    -- Toggle functionality
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, 0, 1, 0)
    button.BackgroundTransparency = 1
    button.Text = ""
    button.Parent = switchBg
    
    local isEnabled = enabled
    button.MouseButton1Click:Connect(function()
        isEnabled = not isEnabled
        
        local bgColorTween = TweenService:Create(switchBg, 
            TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {BackgroundColor3 = isEnabled and CONFIG.THEME_COLOR or Color3.fromRGB(75, 85, 99)}
        )
        
        local knobTween = TweenService:Create(switchKnob,
            TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {Position = isEnabled and UDim2.new(1, -23, 0.5, -10.5) or UDim2.new(0, 2, 0.5, -10.5)}
        )
        
        bgColorTween:Play()
        knobTween:Play()
        
        -- Update feature state and execute loadstring
        if name == "Kill All" then
            FEATURES.combat.killAll = isEnabled
            if FEATURE_FUNCTIONS.combat.killAll then
                FEATURE_FUNCTIONS.combat.killAll(isEnabled)
            end
        elseif name == "Auto Aim" then
            FEATURES.combat.autoAim = isEnabled
            if FEATURE_FUNCTIONS.combat.autoAim then
                FEATURE_FUNCTIONS.combat.autoAim(isEnabled)
            end
        elseif name == "Reach" then
            FEATURES.combat.reach = isEnabled
            if FEATURE_FUNCTIONS.combat.reach then
                FEATURE_FUNCTIONS.combat.reach(isEnabled)
            end
        elseif name == "ESP" then
            FEATURES.visual.esp = isEnabled
            if FEATURE_FUNCTIONS.visual.esp then
                FEATURE_FUNCTIONS.visual.esp(isEnabled)
            end
        elseif name == "Acid Trip" then
            FEATURES.visual.chatspam = isEnabled
            if FEATURE_FUNCTIONS.visual.chatspam then
                FEATURE_FUNCTIONS.visual.chatspam(isEnabled)
            end
        elseif name == "Target HUD" then
            FEATURES.visual.chams = isEnabled
            if FEATURE_FUNCTIONS.visual.chams then
                FEATURE_FUNCTIONS.visual.chams(isEnabled)
            end
        end
        
        print(name .. " " .. (isEnabled and "enabled" or "disabled"))
    end)
    
    return toggleFrame
end

-- Create feature section
local function createFeatureSection(parent, title, position, size)
    local section = Instance.new("Frame")
    section.Name = title .. "Section"
    section.Size = size
    section.Position = position
    section.BackgroundColor3 = Color3.fromRGB(31, 41, 55)
    section.BackgroundTransparency = 0.5
    section.BorderSizePixel = 0
    section.Parent = parent
    
    local sectionCorner = Instance.new("UICorner")
    sectionCorner.CornerRadius = UDim.new(0, 8)
    sectionCorner.Parent = section
    
    local sectionTitle = Instance.new("TextLabel")
    sectionTitle.Name = "SectionTitle"
    sectionTitle.Size = UDim2.new(1, 0, 0, 35) -- Reduced height
    sectionTitle.Position = UDim2.new(0, 0, 0, 0)
    sectionTitle.BackgroundTransparency = 1
    sectionTitle.Text = title
    sectionTitle.TextColor3 = CONFIG.THEME_COLOR
    sectionTitle.TextSize = 16 -- Reduced from 18
    sectionTitle.Font = Enum.Font.GothamBold
    sectionTitle.Parent = section
    
    return section
end

-- Create theme dropdown (FIXED VERSION)
local function createThemeDropdown(parent, gui)
    local themeLabel = Instance.new("TextLabel")
    themeLabel.Size = UDim2.new(0, 80, 0, 25)
    themeLabel.Position = UDim2.new(0.5, 10, 0, 45)
    themeLabel.BackgroundTransparency = 1
    themeLabel.Text = "UI Theme:"
    themeLabel.TextColor3 = CONFIG.TEXT_COLOR
    themeLabel.TextSize = 12
    themeLabel.Font = Enum.Font.Gotham
    themeLabel.TextXAlignment = Enum.TextXAlignment.Left
    themeLabel.Parent = parent
    
    local themeDropdown = Instance.new("TextButton")
    themeDropdown.Size = UDim2.new(0, 120, 0, 25)
    themeDropdown.Position = UDim2.new(0.5, 95, 0, 45)
    themeDropdown.BackgroundColor3 = Color3.fromRGB(55, 65, 81)
    themeDropdown.BorderSizePixel = 0
    themeDropdown.Text = currentTheme .. " ▼"
    themeDropdown.TextColor3 = CONFIG.TEXT_COLOR
    themeDropdown.TextSize = 12
    themeDropdown.Font = Enum.Font.Gotham
    themeDropdown.ZIndex = 2
    themeDropdown.Parent = parent
    
    local dropdownCorner = Instance.new("UICorner")
    dropdownCorner.CornerRadius = UDim.new(0, 4)
    dropdownCorner.Parent = themeDropdown
    
    -- Dropdown menu
    local dropdownMenu = Instance.new("Frame")
    dropdownMenu.Name = "DropdownMenu"
    dropdownMenu.Size = UDim2.new(0, 120, 0, 200)
    dropdownMenu.Position = UDim2.new(0, 0, 1, 2)
    dropdownMenu.BackgroundColor3 = Color3.fromRGB(45, 55, 71)
    dropdownMenu.BorderSizePixel = 0
    dropdownMenu.Visible = false
    dropdownMenu.ZIndex = 10
    dropdownMenu.Parent = themeDropdown
    
    local menuCorner = Instance.new("UICorner")
    menuCorner.CornerRadius = UDim.new(0, 4)
    menuCorner.Parent = dropdownMenu
    
    -- Scrolling frame for themes
    local scrollFrame = Instance.new("ScrollingFrame")
    scrollFrame.Size = UDim2.new(1, 0, 1, 0)
    scrollFrame.BackgroundTransparency = 1
    scrollFrame.BorderSizePixel = 0
    scrollFrame.ScrollBarThickness = 4
    scrollFrame.ScrollBarImageColor3 = CONFIG.THEME_COLOR
    scrollFrame.ZIndex = 11
    scrollFrame.Parent = dropdownMenu
    
    local listLayout = Instance.new("UIListLayout")
    listLayout.SortOrder = Enum.SortOrder.LayoutOrder
    listLayout.Parent = scrollFrame
    
    -- Create theme options
    local themeNames = {}
    for themeName, _ in pairs(THEMES) do
        table.insert(themeNames, themeName)
    end
    table.sort(themeNames)
    
    for i, themeName in ipairs(themeNames) do
        local themeOption = Instance.new("TextButton")
        themeOption.Size = UDim2.new(1, -10, 0, 25)
        themeOption.Position = UDim2.new(0, 5, 0, (i-1)*25)
        themeOption.BackgroundColor3 = themeName == currentTheme and CONFIG.THEME_COLOR or Color3.fromRGB(35, 45, 61)
        themeOption.BorderSizePixel = 0
        themeOption.Text = themeName
        themeOption.TextColor3 = CONFIG.TEXT_COLOR
        themeOption.TextSize = 11
        themeOption.Font = Enum.Font.Gotham
        themeOption.LayoutOrder = i
        themeOption.ZIndex = 12
        themeOption.Parent = scrollFrame
        
        themeOption.MouseButton1Click:Connect(function()
            applyTheme(themeName, gui)
            themeDropdown.Text = themeName .. " ▼"
            dropdownMenu.Visible = false
            
            -- Update all theme option backgrounds
            for _, option in pairs(scrollFrame:GetChildren()) do
                if option:IsA("TextButton") then
                    option.BackgroundColor3 = (option.Text == themeName) and CONFIG.THEME_COLOR or Color3.fromRGB(35, 45, 61)
                end
            end
        end)
        
        themeOption.MouseEnter:Connect(function()
            if themeName ~= currentTheme then
                themeOption.BackgroundColor3 = Color3.fromRGB(55, 65, 81)
            end
        end)
        
        themeOption.MouseLeave:Connect(function()
            if themeName ~= currentTheme then
                themeOption.BackgroundColor3 = Color3.fromRGB(35, 45, 61)
            end
        end)
    end
    
    -- Update canvas size
    scrollFrame.CanvasSize = UDim2.new(0, 0, 0, #themeNames * 25)
    
    -- Toggle dropdown
    themeDropdown.MouseButton1Click:Connect(function()
        dropdownMenu.Visible = not dropdownMenu.Visible
    end)
    
    -- Close dropdown when clicking elsewhere
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            if dropdownMenu.Visible then
                local mouse = Players.LocalPlayer:GetMouse()
                local guiObjects = playerGui:GetGuiObjectsAtPosition(mouse.X, mouse.Y)
                local clickedOnDropdown = false
                
                for _, obj in pairs(guiObjects) do
                    if obj:IsDescendantOf(themeDropdown) then
                        clickedOnDropdown = true
                        break
                    end
                end
                
                if not clickedOnDropdown then
                    dropdownMenu.Visible = false
                end
            end
        end
    end)
end

-- Main function to create the interface
local function createTrapwareInterface()
    local screenGui, mainFrame = createMainGui()
    local titleBar, closeButton = createTitleBar(mainFrame)
    
    -- Close button functionality
    closeButton.MouseButton1Click:Connect(function()
        screenGui:Destroy()
    end)
    
    -- Content area
    local contentFrame = Instance.new("Frame")
    contentFrame.Name = "ContentFrame"
    contentFrame.Size = UDim2.new(1, -30, 1, -80) -- Adjusted for smaller UI
    contentFrame.Position = UDim2.new(0, 15, 0, 65)
    contentFrame.BackgroundTransparency = 1
    contentFrame.Parent = mainFrame
    
    -- Combat section
    local combatSection = createFeatureSection(contentFrame, "Combat", 
        UDim2.new(0, 0, 0, 0), UDim2.new(0.48, 0, 0, 160)) -- Reduced height
    
    createToggleSwitch(combatSection, "Kill All", UDim2.new(0, 0, 0, 40), FEATURES.combat.killAll)
    createToggleSwitch(combatSection, "Auto Aim", UDim2.new(0, 0, 0, 80), FEATURES.combat.autoAim)
    createToggleSwitch(combatSection, "Reach", UDim2.new(0, 0, 0, 120), FEATURES.combat.reach)
    
    -- Visual section
    local visualSection = createFeatureSection(contentFrame, "Visual",
        UDim2.new(0.52, 0, 0, 0), UDim2.new(0.48, 0, 0, 160)) -- Reduced height
    
    createToggleSwitch(visualSection, "ESP", UDim2.new(0, 0, 0, 40), FEATURES.visual.esp)
    createToggleSwitch(visualSection, "Acid Trip", UDim2.new(0, 0, 0, 80), FEATURES.visual.chatspam)
    createToggleSwitch(visualSection, "Target HUD", UDim2.new(0, 0, 0, 120), FEATURES.visual.chams)
    
    -- Settings section
    local settingsSection = createFeatureSection(contentFrame, "Settings",
        UDim2.new(0, 0, 0, 175), UDim2.new(1, 0, 0, 120)) -- Reduced height
    
    -- ESP Color picker
    local colorLabel = Instance.new("TextLabel")
    colorLabel.Size = UDim2.new(0, 80, 0, 25)
    colorLabel.Position = UDim2.new(0, 15, 0, 45)
    colorLabel.BackgroundTransparency = 1
    colorLabel.Text = "ESP Color:"
    colorLabel.TextColor3 = CONFIG.TEXT_COLOR
    colorLabel.TextSize = 12
    colorLabel.Font = Enum.Font.Gotham
    colorLabel.TextXAlignment = Enum.TextXAlignment.Left
    colorLabel.Parent = settingsSection
    
    local colors = {"Red", "Blue", "Green", "Yellow"}
    local colorValues = {
        Color3.fromRGB(239, 68, 68),
        Color3.fromRGB(59, 130, 246),
        Color3.fromRGB(34, 197, 94),
        Color3.fromRGB(234, 179, 8)
    }

    local espColorButtons = {} -- Store references to the color buttons

    for i, color in ipairs(colors) do
        local colorButton = Instance.new("TextButton")
        colorButton.Name = color .. "ColorButton" -- Give unique names
        colorButton.Size = UDim2.new(0, 25, 0, 25) -- Reduced size
        colorButton.Position = UDim2.new(0, 100 + (i-1) * 32, 0, 45)
        colorButton.BackgroundColor3 = colorValues[i]
        colorButton.BorderSizePixel = (FEATURES.settings.espColor == color) and 2 or 0 -- Initial border
        colorButton.BorderColor3 = CONFIG.TEXT_COLOR
        colorButton.Text = ""
        colorButton.Parent = settingsSection
        
        local colorCorner = Instance.new("UICorner")
        colorCorner.CornerRadius = UDim.new(1, 0)
        colorCorner.Parent = colorButton

        table.insert(espColorButtons, colorButton) -- Store the button reference
        
        colorButton.MouseButton1Click:Connect(function()
            FEATURES.settings.espColor = color
            -- Update all color button borders
            for _, otherButton in pairs(espColorButtons) do -- Iterate through stored references
                otherButton.BorderSizePixel = (otherButton.Name:find(color)) and 2 or 0 -- Check if the button name contains the selected color
                otherButton.BorderColor3 = CONFIG.TEXT_COLOR -- Ensure border color updates with theme
            end
            print("ESP Color changed to: " .. color)
        end)
    end
    
    -- Create theme dropdown
    createThemeDropdown(settingsSection, screenGui)
    
    -- Info section
    local infoFrame = Instance.new("Frame")
    infoFrame.Size = UDim2.new(1, 0, 0, 70)  -- Increased height to accommodate more info
    infoFrame.Position = UDim2.new(0, 0, 1, -70)
    infoFrame.BackgroundColor3 = CONFIG.SECONDARY_COLOR
    infoFrame.BackgroundTransparency = 0.3
    infoFrame.BorderSizePixel = 0
    infoFrame.Parent = contentFrame
    
    local infoCorner = Instance.new("UICorner")
    infoCorner.CornerRadius = UDim.new(0, 8)
    infoCorner.Parent = infoFrame
    
    -- Version info
    local versionLabel = Instance.new("TextLabel")
    versionLabel.Name = "VersionLabel"
    versionLabel.Size = UDim2.new(0.5, 0, 0.5, 0)
    versionLabel.Position = UDim2.new(0, 15, 0, 5)
    versionLabel.BackgroundTransparency = 1
    versionLabel.Text = "Version: v2.5\nLast Updated: June 5 2025"
    versionLabel.TextColor3 = CONFIG.ACCENT_COLOR
    versionLabel.TextSize = 10
    versionLabel.Font = Enum.Font.Gotham
    versionLabel.TextYAlignment = Enum.TextYAlignment.Top
    versionLabel.TextXAlignment = Enum.TextXAlignment.Left
    versionLabel.Parent = infoFrame
    
    -- Executor detection
    local function detectExecutor()
        if _G.Synapse then
            return "Synapse X"
        elseif identifyexecutor and identifyexecutor() == "ScriptWare" then
            return "ScriptWare"
        elseif KRNL_LOADED then
            return "Krnl"
        elseif fluxus then
            return "Fluxus"
        elseif PROTOSMASHER_LOADED then
            return "ProtoSmasher"
        elseif isexecutorclosure then
            return "Electron"
        elseif getexecutorname then
            return getexecutorname()
        else
            return "Unknown"
        end
    end
    
    local executorName = detectExecutor()
    print("Detected executor: " .. executorName)
    
    -- Status label with executor and status
    local statusLabel = Instance.new("TextLabel")
    statusLabel.Name = "StatusLabel"
    statusLabel.Size = UDim2.new(0.5, 0, 0.5, 0)
    statusLabel.Position = UDim2.new(0.5, 0, 0, 5)
    statusLabel.BackgroundTransparency = 1
    statusLabel.Text = "Executor: "..executorName.."\nStatus: Active 🟢"
    statusLabel.TextColor3 = CONFIG.THEME_COLOR
    statusLabel.TextSize = 10
    statusLabel.Font = Enum.Font.Gotham
    statusLabel.TextYAlignment = Enum.TextYAlignment.Top
    statusLabel.TextXAlignment = Enum.TextXAlignment.Right
    statusLabel.Parent = infoFrame
    
    -- Performance counters
    local performanceLabel = Instance.new("TextLabel")
    performanceLabel.Name = "PerformanceLabel"
    performanceLabel.Size = UDim2.new(0.4, 0, 1, 0)
    performanceLabel.Position = UDim2.new(0, 15, 0, 0)
    performanceLabel.BackgroundTransparency = 1
    performanceLabel.Text = "Ping: ... | FPS: ..."
    performanceLabel.TextColor3 = CONFIG.ACCENT_COLOR
    performanceLabel.TextSize = 10
    performanceLabel.Font = Enum.Font.Gotham
    performanceLabel.TextXAlignment = Enum.TextXAlignment.Left
    performanceLabel.TextYAlignment = Enum.TextYAlignment.Center
    performanceLabel.Parent = infoFrame
    
    -- SERVER HOP BUTTON - Added in the middle between FPS/Ping and status
    local serverHopButton = Instance.new("TextButton")
    serverHopButton.Name = "ServerHopButton"
    serverHopButton.Size = UDim2.new(0, 100, 0, 25)
    serverHopButton.Position = UDim2.new(0.5, -50, 0.5, -12.5) -- Centered in info frame
    serverHopButton.BackgroundColor3 = CONFIG.THEME_COLOR
    serverHopButton.Text = "Server Hop"
    serverHopButton.TextColor3 = CONFIG.TEXT_COLOR
    serverHopButton.TextSize = 12
    serverHopButton.Font = Enum.Font.Gotham
    serverHopButton.Parent = infoFrame
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 4)
    buttonCorner.Parent = serverHopButton
    
    -- Server hop functionality
    serverHopButton.MouseButton1Click:Connect(function()
        print("Executing server hop...")
        serverHopButton.Text = "Hopping..."
        serverHopButton.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
        
        -- Execute server hop script
        local success, result = pcall(function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/MADMONEYDISTRO/madmoney-ghost-client/refs/heads/main/hop", true))()
        end)
        
        if not success then
            warn("Server hop failed: " .. tostring(result))
            serverHopButton.Text = "Error - Retry?"
            wait(2)
            serverHopButton.Text = "Server Hop"
            serverHopButton.BackgroundColor3 = CONFIG.THEME_COLOR
        end
    end)
    
    -- Button hover effects
    serverHopButton.MouseEnter:Connect(function()
        serverHopButton.BackgroundColor3 = Color3.fromRGB(
            math.clamp(CONFIG.THEME_COLOR.R * 255 + 20, 0, 255)/255,
            math.clamp(CONFIG.THEME_COLOR.G * 255 + 20, 0, 255)/255,
            math.clamp(CONFIG.THEME_COLOR.B * 255 + 20, 0, 255)/255
        )
    end)
    
    serverHopButton.MouseLeave:Connect(function()
        serverHopButton.BackgroundColor3 = CONFIG.THEME_COLOR
    end)
    
    -- FPS counter
    local fps = 0
    local frameCount = 0
    local lastUpdate = tick()
    
    RunService.RenderStepped:Connect(function()
        frameCount = frameCount + 1
        local now = tick()
        if now - lastUpdate >= 1 then
            fps = frameCount
            frameCount = 0
            lastUpdate = now
        end
    end)
    
    -- Ping counter
    spawn(function()
        while wait(1) do
            if not (screenGui and screenGui.Parent) then break end
            
            local ping = "N/A"
            local stats = game:GetService("Stats")
            if stats then
                local network = stats.Network
                if network then
                    local pingStat = network:FindFirstChild("ServerStatsItem")
                    if pingStat then
                        pingStat = pingStat:FindFirstChild("Data Ping")
                        if pingStat then
                            ping = pingStat:GetValue()
                            ping = math.floor(ping)
                        end
                    end
                end
            end
            
            performanceLabel.Text = string.format("Ping: %d ms | FPS: %d", ping, fps)
        end
    end)
    
    print("Trapware Interface v1.2.5 loaded successfully!")
    return screenGui
end

-- Toggle key (F1 to show/hide)
local gui = nil
local isVisible = false

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == Enum.KeyCode.F1 then
        if gui and gui.Parent then
            gui:Destroy()
            gui = nil
            isVisible = false
            print("Trapware Interface hidden")
        else
            gui = createTrapwareInterface()
            isVisible = true
            print("Trapware Interface shown")
        end
    end
end)

-- Initialize
print("Trapware v1.2.5 - Press F1 to toggle interface")
print("Available themes: Default, Crimson Fire, Ocean Depths, Forest Mystique, Golden Sunset,")
print("Purple Haze, Neon Cyber, Arctic Frost, Volcanic Ember, Midnight Steel, Toxic Waste,")
print("Rose Gold, Electric Blue, Sunset Orange, Deep Space, Cherry Blossom, Matrix Green,")
print("Royal Purple, Amber Glow, Blood Moon")

-- Auto-show on first load
wait(1)
gui = createTrapwareInterface()
